# Production values for Portr
# This file contains recommended production settings

global:
  domain: webhooks.run
  ingressClassName: nginx

admin:
  enabled: true
  replicaCount: 3

  image:
    repository: amalshaji/portr-admin
    pullPolicy: IfNotPresent
    tag: "0.0.20-beta"

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # Rate limiting
      nginx.ingress.kubernetes.io/limit-rps: "100"
      # Additional security headers
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Frame-Options: DENY";
        more_set_headers "X-Content-Type-Options: nosniff";
        more_set_headers "X-XSS-Protection: 1; mode=block";
    hosts:
      - host: admin.webhooks.run
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: portr-admin-tls
        hosts:
          - admin.webhooks.run

  resources:
    limits:
      cpu: 2000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  podDisruptionBudget:
    enabled: true
    minAvailable: 2

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                  - admin
          topologyKey: kubernetes.io/hostname

tunnel:
  enabled: true
  replicaCount: 1

  image:
    repository: amalshaji/portr-tunnel
    pullPolicy: IfNotPresent
    tag: "0.0.20-beta"

  service:
    type: LoadBalancer
    httpPort: 80
    httpsPort: 443
    sshPort: 2222
    annotations:
      metallb.universe.tf/allow-shared-ip: portr-tunnel
      # Add your cloud provider annotations here
      # service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      # service.beta.kubernetes.io/azure-load-balancer-internal: "false"

  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      # WebSocket support
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    hosts:
      - host: "*.webhooks.run"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: portr-tunnel-wildcard-tls
        hosts:
          - "*.webhooks.run"

  resources:
    limits:
      cpu: 4000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi

postgresql:
  enabled: true

  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "16.2"

  persistence:
    enabled: true
    storageClass: ""  # Use default storage class
    accessMode: ReadWriteOnce
    size: 50Gi

  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  auth:
    username: postgres
    password: "CHANGE-ME-TO-STRONG-PASSWORD"
    database: portr

config:
  github:
    clientId: "CHANGE-ME"
    clientSecret: "CHANGE-ME"

  encryptionKey: "CHANGE-ME-USE-openssl-rand-hex-32"

  serverUrl: "webhooks.run"
  sshUrl: "webhooks.run:2222"

serviceAccount:
  create: true
  annotations:
    {}
    # Add cloud provider annotations if needed
    # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT-ID:role/IAM-ROLE-NAME
  name: ""

podAnnotations:
  {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "8000"

podLabels:
  {}
  # environment: production
  # team: platform
