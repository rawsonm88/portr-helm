{{- if .Values.admin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portr.fullname" . }}-admin
  labels:
    {{- include "portr.admin.labels" . | nindent 4 }}
spec:
  {{- if not .Values.admin.autoscaling.enabled }}
  replicas: {{ .Values.admin.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "portr.admin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "portr.admin.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "portr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.admin.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        # Wait for PostgreSQL to be ready
        - name: wait-for-postgresql
          image: busybox:1.36
          command:
            - 'sh'
            - '-c'
            - |
              until nc -z {{ include "portr.postgresql.serviceName" . }} {{ .Values.postgresql.service.port }}; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
              echo "PostgreSQL is ready!"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: admin
          image: "{{ .Values.admin.image.repository }}:{{ .Values.admin.image.tag }}"
          imagePullPolicy: {{ .Values.admin.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.admin.securityContext | nindent 12 }}
          env:
            # Configuration from ConfigMap
            - name: PORTR_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ include "portr.fullname" . }}-config
                  key: PORTR_DOMAIN
            - name: PORTR_SERVER_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "portr.fullname" . }}-config
                  key: PORTR_SERVER_URL
            - name: PORTR_SSH_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "portr.fullname" . }}-config
                  key: PORTR_SSH_URL
            # Sensitive configuration from Secret
            - name: PORTR_ADMIN_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "portr.fullname" . }}-secret
                  key: PORTR_ADMIN_GITHUB_CLIENT_ID
            - name: PORTR_ADMIN_GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "portr.fullname" . }}-secret
                  key: PORTR_ADMIN_GITHUB_CLIENT_SECRET
            - name: PORTR_ADMIN_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "portr.fullname" . }}-secret
                  key: PORTR_ADMIN_ENCRYPTION_KEY
            - name: PORTR_DB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "portr.fullname" . }}-secret
                  key: PORTR_DB_URL
          ports:
            - name: http
              containerPort: {{ .Values.admin.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.admin.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.admin.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.admin.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.admin.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.admin.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.admin.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
