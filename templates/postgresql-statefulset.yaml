{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "portr.fullname" . }}-postgresql
  labels:
    {{- include "portr.postgresql.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "portr.postgresql.serviceName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "portr.postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "portr.postgresql.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "portr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.postgresql.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.postgresql.securityContext | nindent 12 }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "portr.fullname" . }}-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "portr.fullname" . }}-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "portr.fullname" . }}-config
                  key: POSTGRES_DB
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.postgresql.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.postgresql.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: tmp
              mountPath: /tmp
            - name: run
              mountPath: /var/run/postgresql
      volumes:
        - name: tmp
          emptyDir: {}
        - name: run
          emptyDir: {}
      {{- with .Values.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "portr.postgresql.labels" . | nindent 10 }}
      spec:
        accessModes:
          - {{ .Values.postgresql.persistence.accessMode | quote }}
        {{- if .Values.postgresql.persistence.storageClass }}
        {{- if (eq "-" .Values.postgresql.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.postgresql.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size | quote }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  {{- end }}
{{- end }}
